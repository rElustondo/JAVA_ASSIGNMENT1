version: '3.8'

services:
  keycloak:
    image: jboss/keycloak
    ports:
      - "8080:8080"
    container_name: keycloak-a2
    environment:
      JBOSS_LOG_MANAGER_ROOT_LOGGER: DEBUG
      DB_VENDOR: postgres
      DB_ADDR: postgres-keycloak-a2
      DB_DATABASE: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: password
      KEYCLOAK_IMPORT: /opt/jboss/keycloak/realms/realm-assignment2.json
    volumes:
      - ./realms/:/opt/jboss/keycloak/realms
    depends_on:
      - postgres-keycloak
    restart: unless-stopped
    networks:
      - spring
  discovery-service:
    image: discovery-service-a2
    ports:
      - "8761:8761"
    build:
      context: ./discovery-service
      dockerfile: ./Dockerfile
    container_name: discovery-service-assignment2
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
    networks:
      - spring
  api-gateway:
    image: api-gateway-a2
    restart: unless-stopped
    ports:
      - "8181:8181"
    build:
      context: ./api-gateway
      dockerfile: ./Dockerfile
    container_name: api-gateway-assignment2
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - discovery-service
    networks:
      - spring
  social-service:
    image: social-service
    ports:
      - "8084:8084"
    build:
      context: ./social-service
      dockerfile: ./Dockerfile
    container_name: social-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
      - discovery-service
    networks:
      - spring

  friendship-service:
    image: friendship-service
    ports:
      - "8085:8085"
    build:
      context: ./friendship-service
      dockerfile: ./Dockerfile
    container_name: friendship-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
      - discovery-service
    networks:
      - spring
  postgres-keycloak:
    image: postgres:latest
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloak
      PGDATA: /data/postgres
    volumes:
      - ./data/postgres/postgres-keycloak:/data/postgres
    container_name: postgres-keycloak-a2
    restart: unless-stopped
    networks:
      - spring
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootadmin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - ./data/mongo/posts:/data/db
      - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    container_name: mongodb-java-assignment-1
    restart: unless-stopped
    command: mongod --auth
    networks:
      - spring

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootadmin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
    container_name: mongo-express-gbc-java-assignment-1
    restart: unless-stopped
    depends_on:
      - mongodb
    networks:
      - spring
networks:
  spring:
    driver: bridge